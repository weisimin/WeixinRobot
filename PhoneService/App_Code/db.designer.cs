#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WeixinRoboot")]
public partial class dbDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertWX_UserReply(WX_UserReply instance);
  partial void UpdateWX_UserReply(WX_UserReply instance);
  partial void DeleteWX_UserReply(WX_UserReply instance);
  partial void InsertWX_UserReplyLog(WX_UserReplyLog instance);
  partial void UpdateWX_UserReplyLog(WX_UserReplyLog instance);
  partial void DeleteWX_UserReplyLog(WX_UserReplyLog instance);
  #endregion
	
	public dbDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WeixinRobootConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public dbDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dbDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<WX_UserReply> WX_UserReply
	{
		get
		{
			return this.GetTable<WX_UserReply>();
		}
	}
	
	public System.Data.Linq.Table<WX_UserReplyLog> WX_UserReplyLog
	{
		get
		{
			return this.GetTable<WX_UserReplyLog>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WX_UserReply")]
public partial class WX_UserReply : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _WX_UserName;
	
	private System.Nullable<bool> _IsReply;
	
	private System.Guid _aspnet_UserID;
	
	private string _NickName;
	
	private string _RemarkName;
	
	private System.Nullable<bool> _IsReceiveTransfer;
	
	private System.Nullable<bool> _IsCaculateFuli;
	
	private string _WeChatID;
	
	private string _WX_SourceType;
	
	private System.Nullable<bool> _IsBoss;
	
	private System.Nullable<bool> _IsBallPIC;
	
	private System.Nullable<bool> _IsAdmin;
	
	private System.Nullable<bool> _FiveMinuteMode;
	
	private System.Nullable<bool> _HkMode;
	
	private System.Nullable<bool> _AozcMode;
	
	private System.Nullable<bool> _ChongqingMode;
	
	private System.Nullable<bool> _TengXunShiFenMode;
	
	private System.Nullable<bool> _XinJiangMode;
	
	private System.Nullable<bool> _TengXunWuFenMode;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWX_UserNameChanging(string value);
    partial void OnWX_UserNameChanged();
    partial void OnIsReplyChanging(System.Nullable<bool> value);
    partial void OnIsReplyChanged();
    partial void Onaspnet_UserIDChanging(System.Guid value);
    partial void Onaspnet_UserIDChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnRemarkNameChanging(string value);
    partial void OnRemarkNameChanged();
    partial void OnIsReceiveTransferChanging(System.Nullable<bool> value);
    partial void OnIsReceiveTransferChanged();
    partial void OnIsCaculateFuliChanging(System.Nullable<bool> value);
    partial void OnIsCaculateFuliChanged();
    partial void OnWeChatIDChanging(string value);
    partial void OnWeChatIDChanged();
    partial void OnWX_SourceTypeChanging(string value);
    partial void OnWX_SourceTypeChanged();
    partial void OnIsBossChanging(System.Nullable<bool> value);
    partial void OnIsBossChanged();
    partial void OnIsBallPICChanging(System.Nullable<bool> value);
    partial void OnIsBallPICChanged();
    partial void OnIsAdminChanging(System.Nullable<bool> value);
    partial void OnIsAdminChanged();
    partial void OnFiveMinuteModeChanging(System.Nullable<bool> value);
    partial void OnFiveMinuteModeChanged();
    partial void OnHkModeChanging(System.Nullable<bool> value);
    partial void OnHkModeChanged();
    partial void OnAozcModeChanging(System.Nullable<bool> value);
    partial void OnAozcModeChanged();
    partial void OnChongqingModeChanging(System.Nullable<bool> value);
    partial void OnChongqingModeChanged();
    partial void OnTengXunShiFenModeChanging(System.Nullable<bool> value);
    partial void OnTengXunShiFenModeChanged();
    partial void OnXinJiangModeChanging(System.Nullable<bool> value);
    partial void OnXinJiangModeChanged();
    partial void OnTengXunWuFenModeChanging(System.Nullable<bool> value);
    partial void OnTengXunWuFenModeChanged();
    #endregion
	
	public WX_UserReply()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WX_UserName", DbType="NVarChar(350) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string WX_UserName
	{
		get
		{
			return this._WX_UserName;
		}
		set
		{
			if ((this._WX_UserName != value))
			{
				this.OnWX_UserNameChanging(value);
				this.SendPropertyChanging();
				this._WX_UserName = value;
				this.SendPropertyChanged("WX_UserName");
				this.OnWX_UserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReply", DbType="Bit")]
	public System.Nullable<bool> IsReply
	{
		get
		{
			return this._IsReply;
		}
		set
		{
			if ((this._IsReply != value))
			{
				this.OnIsReplyChanging(value);
				this.SendPropertyChanging();
				this._IsReply = value;
				this.SendPropertyChanged("IsReply");
				this.OnIsReplyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aspnet_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid aspnet_UserID
	{
		get
		{
			return this._aspnet_UserID;
		}
		set
		{
			if ((this._aspnet_UserID != value))
			{
				this.Onaspnet_UserIDChanging(value);
				this.SendPropertyChanging();
				this._aspnet_UserID = value;
				this.SendPropertyChanged("aspnet_UserID");
				this.Onaspnet_UserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(512)")]
	public string NickName
	{
		get
		{
			return this._NickName;
		}
		set
		{
			if ((this._NickName != value))
			{
				this.OnNickNameChanging(value);
				this.SendPropertyChanging();
				this._NickName = value;
				this.SendPropertyChanged("NickName");
				this.OnNickNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemarkName", DbType="NVarChar(512)")]
	public string RemarkName
	{
		get
		{
			return this._RemarkName;
		}
		set
		{
			if ((this._RemarkName != value))
			{
				this.OnRemarkNameChanging(value);
				this.SendPropertyChanging();
				this._RemarkName = value;
				this.SendPropertyChanged("RemarkName");
				this.OnRemarkNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReceiveTransfer", DbType="Bit")]
	public System.Nullable<bool> IsReceiveTransfer
	{
		get
		{
			return this._IsReceiveTransfer;
		}
		set
		{
			if ((this._IsReceiveTransfer != value))
			{
				this.OnIsReceiveTransferChanging(value);
				this.SendPropertyChanging();
				this._IsReceiveTransfer = value;
				this.SendPropertyChanged("IsReceiveTransfer");
				this.OnIsReceiveTransferChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCaculateFuli", DbType="Bit")]
	public System.Nullable<bool> IsCaculateFuli
	{
		get
		{
			return this._IsCaculateFuli;
		}
		set
		{
			if ((this._IsCaculateFuli != value))
			{
				this.OnIsCaculateFuliChanging(value);
				this.SendPropertyChanging();
				this._IsCaculateFuli = value;
				this.SendPropertyChanged("IsCaculateFuli");
				this.OnIsCaculateFuliChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeChatID", DbType="NVarChar(100)")]
	public string WeChatID
	{
		get
		{
			return this._WeChatID;
		}
		set
		{
			if ((this._WeChatID != value))
			{
				this.OnWeChatIDChanging(value);
				this.SendPropertyChanging();
				this._WeChatID = value;
				this.SendPropertyChanged("WeChatID");
				this.OnWeChatIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WX_SourceType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string WX_SourceType
	{
		get
		{
			return this._WX_SourceType;
		}
		set
		{
			if ((this._WX_SourceType != value))
			{
				this.OnWX_SourceTypeChanging(value);
				this.SendPropertyChanging();
				this._WX_SourceType = value;
				this.SendPropertyChanged("WX_SourceType");
				this.OnWX_SourceTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBoss", DbType="Bit")]
	public System.Nullable<bool> IsBoss
	{
		get
		{
			return this._IsBoss;
		}
		set
		{
			if ((this._IsBoss != value))
			{
				this.OnIsBossChanging(value);
				this.SendPropertyChanging();
				this._IsBoss = value;
				this.SendPropertyChanged("IsBoss");
				this.OnIsBossChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBallPIC", DbType="Bit")]
	public System.Nullable<bool> IsBallPIC
	{
		get
		{
			return this._IsBallPIC;
		}
		set
		{
			if ((this._IsBallPIC != value))
			{
				this.OnIsBallPICChanging(value);
				this.SendPropertyChanging();
				this._IsBallPIC = value;
				this.SendPropertyChanged("IsBallPIC");
				this.OnIsBallPICChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit")]
	public System.Nullable<bool> IsAdmin
	{
		get
		{
			return this._IsAdmin;
		}
		set
		{
			if ((this._IsAdmin != value))
			{
				this.OnIsAdminChanging(value);
				this.SendPropertyChanging();
				this._IsAdmin = value;
				this.SendPropertyChanged("IsAdmin");
				this.OnIsAdminChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiveMinuteMode", DbType="Bit")]
	public System.Nullable<bool> FiveMinuteMode
	{
		get
		{
			return this._FiveMinuteMode;
		}
		set
		{
			if ((this._FiveMinuteMode != value))
			{
				this.OnFiveMinuteModeChanging(value);
				this.SendPropertyChanging();
				this._FiveMinuteMode = value;
				this.SendPropertyChanged("FiveMinuteMode");
				this.OnFiveMinuteModeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HkMode", DbType="Bit")]
	public System.Nullable<bool> HkMode
	{
		get
		{
			return this._HkMode;
		}
		set
		{
			if ((this._HkMode != value))
			{
				this.OnHkModeChanging(value);
				this.SendPropertyChanging();
				this._HkMode = value;
				this.SendPropertyChanged("HkMode");
				this.OnHkModeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AozcMode", DbType="Bit")]
	public System.Nullable<bool> AozcMode
	{
		get
		{
			return this._AozcMode;
		}
		set
		{
			if ((this._AozcMode != value))
			{
				this.OnAozcModeChanging(value);
				this.SendPropertyChanging();
				this._AozcMode = value;
				this.SendPropertyChanged("AozcMode");
				this.OnAozcModeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChongqingMode", DbType="Bit")]
	public System.Nullable<bool> ChongqingMode
	{
		get
		{
			return this._ChongqingMode;
		}
		set
		{
			if ((this._ChongqingMode != value))
			{
				this.OnChongqingModeChanging(value);
				this.SendPropertyChanging();
				this._ChongqingMode = value;
				this.SendPropertyChanged("ChongqingMode");
				this.OnChongqingModeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TengXunShiFenMode", DbType="Bit")]
	public System.Nullable<bool> TengXunShiFenMode
	{
		get
		{
			return this._TengXunShiFenMode;
		}
		set
		{
			if ((this._TengXunShiFenMode != value))
			{
				this.OnTengXunShiFenModeChanging(value);
				this.SendPropertyChanging();
				this._TengXunShiFenMode = value;
				this.SendPropertyChanged("TengXunShiFenMode");
				this.OnTengXunShiFenModeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XinJiangMode", DbType="Bit")]
	public System.Nullable<bool> XinJiangMode
	{
		get
		{
			return this._XinJiangMode;
		}
		set
		{
			if ((this._XinJiangMode != value))
			{
				this.OnXinJiangModeChanging(value);
				this.SendPropertyChanging();
				this._XinJiangMode = value;
				this.SendPropertyChanged("XinJiangMode");
				this.OnXinJiangModeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TengXunWuFenMode", DbType="Bit")]
	public System.Nullable<bool> TengXunWuFenMode
	{
		get
		{
			return this._TengXunWuFenMode;
		}
		set
		{
			if ((this._TengXunWuFenMode != value))
			{
				this.OnTengXunWuFenModeChanging(value);
				this.SendPropertyChanging();
				this._TengXunWuFenMode = value;
				this.SendPropertyChanged("TengXunWuFenMode");
				this.OnTengXunWuFenModeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WX_UserReplyLog")]
public partial class WX_UserReplyLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _WX_UserName;
	
	private System.Guid _aspnet_UserID;
	
	private System.DateTime _ReceiveTime;
	
	private string _ReceiveContent;
	
	private string _ReplyContent;
	
	private System.Nullable<System.DateTime> _ReplyTime;
	
	private System.Nullable<bool> _HaveDeal;
	
	private string _SourceType;
	
	private string _WX_msgType;
	
	private string _WX_SourceType;
	
	private int _ReceiveIndex;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWX_UserNameChanging(string value);
    partial void OnWX_UserNameChanged();
    partial void Onaspnet_UserIDChanging(System.Guid value);
    partial void Onaspnet_UserIDChanged();
    partial void OnReceiveTimeChanging(System.DateTime value);
    partial void OnReceiveTimeChanged();
    partial void OnReceiveContentChanging(string value);
    partial void OnReceiveContentChanged();
    partial void OnReplyContentChanging(string value);
    partial void OnReplyContentChanged();
    partial void OnReplyTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReplyTimeChanged();
    partial void OnHaveDealChanging(System.Nullable<bool> value);
    partial void OnHaveDealChanged();
    partial void OnSourceTypeChanging(string value);
    partial void OnSourceTypeChanged();
    partial void OnWX_msgTypeChanging(string value);
    partial void OnWX_msgTypeChanged();
    partial void OnWX_SourceTypeChanging(string value);
    partial void OnWX_SourceTypeChanged();
    partial void OnReceiveIndexChanging(int value);
    partial void OnReceiveIndexChanged();
    #endregion
	
	public WX_UserReplyLog()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WX_UserName", DbType="NVarChar(350) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string WX_UserName
	{
		get
		{
			return this._WX_UserName;
		}
		set
		{
			if ((this._WX_UserName != value))
			{
				this.OnWX_UserNameChanging(value);
				this.SendPropertyChanging();
				this._WX_UserName = value;
				this.SendPropertyChanged("WX_UserName");
				this.OnWX_UserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aspnet_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid aspnet_UserID
	{
		get
		{
			return this._aspnet_UserID;
		}
		set
		{
			if ((this._aspnet_UserID != value))
			{
				this.Onaspnet_UserIDChanging(value);
				this.SendPropertyChanging();
				this._aspnet_UserID = value;
				this.SendPropertyChanged("aspnet_UserID");
				this.Onaspnet_UserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
	public System.DateTime ReceiveTime
	{
		get
		{
			return this._ReceiveTime;
		}
		set
		{
			if ((this._ReceiveTime != value))
			{
				this.OnReceiveTimeChanging(value);
				this.SendPropertyChanging();
				this._ReceiveTime = value;
				this.SendPropertyChanged("ReceiveTime");
				this.OnReceiveTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveContent", DbType="NVarChar(MAX)")]
	public string ReceiveContent
	{
		get
		{
			return this._ReceiveContent;
		}
		set
		{
			if ((this._ReceiveContent != value))
			{
				this.OnReceiveContentChanging(value);
				this.SendPropertyChanging();
				this._ReceiveContent = value;
				this.SendPropertyChanged("ReceiveContent");
				this.OnReceiveContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyContent", DbType="NVarChar(MAX)")]
	public string ReplyContent
	{
		get
		{
			return this._ReplyContent;
		}
		set
		{
			if ((this._ReplyContent != value))
			{
				this.OnReplyContentChanging(value);
				this.SendPropertyChanging();
				this._ReplyContent = value;
				this.SendPropertyChanged("ReplyContent");
				this.OnReplyContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> ReplyTime
	{
		get
		{
			return this._ReplyTime;
		}
		set
		{
			if ((this._ReplyTime != value))
			{
				this.OnReplyTimeChanging(value);
				this.SendPropertyChanging();
				this._ReplyTime = value;
				this.SendPropertyChanged("ReplyTime");
				this.OnReplyTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveDeal", DbType="Bit")]
	public System.Nullable<bool> HaveDeal
	{
		get
		{
			return this._HaveDeal;
		}
		set
		{
			if ((this._HaveDeal != value))
			{
				this.OnHaveDealChanging(value);
				this.SendPropertyChanging();
				this._HaveDeal = value;
				this.SendPropertyChanged("HaveDeal");
				this.OnHaveDealChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string SourceType
	{
		get
		{
			return this._SourceType;
		}
		set
		{
			if ((this._SourceType != value))
			{
				this.OnSourceTypeChanging(value);
				this.SendPropertyChanging();
				this._SourceType = value;
				this.SendPropertyChanged("SourceType");
				this.OnSourceTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WX_msgType", DbType="NVarChar(50)")]
	public string WX_msgType
	{
		get
		{
			return this._WX_msgType;
		}
		set
		{
			if ((this._WX_msgType != value))
			{
				this.OnWX_msgTypeChanging(value);
				this.SendPropertyChanging();
				this._WX_msgType = value;
				this.SendPropertyChanged("WX_msgType");
				this.OnWX_msgTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WX_SourceType", DbType="NVarChar(50)")]
	public string WX_SourceType
	{
		get
		{
			return this._WX_SourceType;
		}
		set
		{
			if ((this._WX_SourceType != value))
			{
				this.OnWX_SourceTypeChanging(value);
				this.SendPropertyChanging();
				this._WX_SourceType = value;
				this.SendPropertyChanged("WX_SourceType");
				this.OnWX_SourceTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveIndex", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ReceiveIndex
	{
		get
		{
			return this._ReceiveIndex;
		}
		set
		{
			if ((this._ReceiveIndex != value))
			{
				this.OnReceiveIndexChanging(value);
				this.SendPropertyChanging();
				this._ReceiveIndex = value;
				this.SendPropertyChanged("ReceiveIndex");
				this.OnReceiveIndexChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
